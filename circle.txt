#include <GL/glut.h>

// Set a pixel in the window
void setPixel(int x, int y) {
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
}

// Midpoint Circle Algorithm
void drawCircle(int xc, int yc, int r) {
    int x = 0, y = r, d = 1 - r;
    while (x <= y) {
        setPixel(xc + x, yc + y); setPixel(xc - x, yc + y);
        setPixel(xc + x, yc - y); setPixel(xc - x, yc - y);
        setPixel(xc + y, yc + x); setPixel(xc - y, yc + x);
        setPixel(xc + y, yc - x); setPixel(xc - y, yc - x);
        x++;
        d = (d < 0) ? d + 2 * x + 1 : d + 2 * (x - y--) + 1;
    }
}

// Midpoint Ellipse Algorithm
void drawEllipse(int xc, int yc, int rx, int ry) {
    float x = 0, y = ry, dx = 2 * ry * ry * x, dy = 2 * rx * rx * y, d1 = ry * ry - rx * rx * ry + 0.25 * rx * rx, d2;
    while (dx < dy) {
        setPixel(xc + x, yc + y); setPixel(xc - x, yc + y);
        setPixel(xc + x, yc - y); setPixel(xc - x, yc - y);
        if (d1 < 0) { dx += 2 * ry * ry; d1 += dx + ry * ry; }
        else { dx += 2 * ry * ry; dy -= 2 * rx * rx; d1 += dx - dy + ry * ry; y--; }
        x++;
    }
    d2 = ry * ry * (x + 0.5) * (x + 0.5) + rx * rx * (y - 1) * (y - 1) - rx * rx * ry * ry;
    while (y >= 0) {
        setPixel(xc + x, yc + y); setPixel(xc - x, yc + y);
        setPixel(xc + x, yc - y); setPixel(xc - x, yc - y);
        if (d2 > 0) { dy -= 2 * rx * rx; d2 += rx * rx - dy; }
        else { dx += 2 * ry * ry; dy -= 2 * rx * rx; d2 += dx - dy + rx * rx; x++; }
        y--;
    }
}

// Display callback function
void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1.0f, 0.0f, 0.0f); drawCircle(0, 0, 100);
    glColor3f(0.0f, 1.0f, 0.0f); drawEllipse(0, 0, 150, 100);
    glFlush();
}

void init() {
    glClearColor(0.0, 0.0, 0.0, 0.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-200, 200, -200, 200);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutCreateWindow("OpenGL Circle and Ellipse");
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
